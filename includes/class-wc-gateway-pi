<?php
// Custom WooCommerce payment gateway integration

if (!class_exists('WC_Payment_Gateway')) return;

class WC_Gateway_Pi extends WC_Payment_Gateway {
    public function __construct() {
        $this->id = 'pi_gateway';
        $this->method_title = __('Pi Payment Gateway', 'smartmail-assistant');
        $this->method_description = __('Custom payment gateway for Pi network.', 'smartmail-assistant');

        $this->init_form_fields();
        $this->init_settings();

        $this->title = $this->get_option('title');
        $this->description = $this->get_option('description');

        add_action('woocommerce_update_options_payment_gateways_' . $this->id, array($this, 'process_admin_options'));
    }

    public function init_form_fields() {
        $this->form_fields = array(
            'enabled' => array(
                'title'   => __('Enable/Disable', 'smartmail-assistant'),
                'type'    => 'checkbox',
                'label'   => __('Enable Pi Payment Gateway', 'smartmail-assistant'),
                'default' => 'yes'
            ),
            'title' => array(
                'title'       => __('Title', 'smartmail-assistant'),
                'type'        => 'text',
                'description' => __('This controls the title which the user sees during checkout.', 'smartmail-assistant'),
                'default'     => __('Pi Payment', 'smartmail-assistant'),
                'desc_tip'    => true,
            ),
            'description' => array(
                'title'       => __('Description', 'smartmail-assistant'),
                'type'        => 'textarea',
                'description' => __('This controls the description which the user sees during checkout.', 'smartmail-assistant'),
                'default'     => __('Pay with Pi cryptocurrency.', 'smartmail-assistant'),
            ),
        );
    }

    public function process_payment($order_id) {
        $order = wc_get_order($order_id);
        $order->payment_complete();
        wc_reduce_stock_levels($order_id);

        return array(
            'result'   => 'success',
            'redirect' => $this->get_return_url($order),
        );
    }
}

function add_wc_gateway_pi($methods) {
    $methods[] = 'WC_Gateway_Pi';
    return $methods;
}
add_filter('woocommerce_payment_gateways', 'add_wc_gateway_pi');
?>
